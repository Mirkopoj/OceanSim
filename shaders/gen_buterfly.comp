#version 450

const float PI = 3.1415926;

layout(local_size_x = 1, local_size_y = 16) in;
layout(binding = 0, rgba16f) uniform writeonly image2D butterfly;
layout(binding = 1) buffer readonly UBO {
	float LengthScale;
	float CutoffHigh;
	float CutoffLow;
	float GravityAcceleration;
	float Depth;
	uint Size;
} ubo[];

vec2 ComplexExp(vec2 a) {
	return vec2(cos(a.y), sin(a.y)) * exp(a.x);
}

void main() {
	ivec2 id = ivec2(gl_GlobalInvocationID.xy);
	uint N = ubo[0].Size;
	uint b = N >> (id.x + 1);
	vec2 mult = 2 * PI * vec2(0, 1) / N;
	uint i = (2 * b * (id.y / b) + id.y % b) % N;
	vec2 twiddle = ComplexExp(-mult * ((id.y / b) * b));
	imageStore(
			butterfly,
			id,
			vec4(twiddle.x, twiddle.y, i, i + b)
		);
	imageStore(
			butterfly,
			ivec2(id.x, id.y + N / 2),
			vec4(-twiddle.x, -twiddle.y, i, i + b)
		);
}
